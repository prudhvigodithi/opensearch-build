lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    agent {
        docker {
            label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk14'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    parameters {
        string(
                defaultValue: 'https://github.com/opensearch-project/opensearch-build',
                name: 'DOCKER_BUILD_GIT_REPOSITORY',
                description: 'The git repository name that contains dockerfiles and the docker build script.',
                trim: true
        )
        string(
                defaultValue: 'main',
                name: 'DOCKER_BUILD_GIT_REPOSITORY_REFERENCE',
                description: 'The git reference (branch/tag/commit_id) of above repository.',
                trim: true
        )
        string(
                name: 'DOCKER_BUILD_SCRIPT_WITH_COMMANDS',
                description: 'The script path of the docker build script. Eg: bash docker/ci/build-image-multi-arch.sh -v <TAG_NAME> -f <DOCKERFILE PATH>',
                trim: true
        )
        string(
                name: 'IMAGE_REPOSITORY',
                description: 'Image Repository on staging Eg: ci-runner',
                trim: true
        )
        string(
                name: 'IMAGE_TAG',
                description: 'Image tag on staging. Eg: 1.3.0',
                trim: true
        )
        choice(
                choices: ['docker-hub + ECR', 'docker-hub', 'ECR'],
                name: 'PLATFORM',
                description: 'Where do you want to push the images?'
        )
    }
    stages {
        stage('docker-login-check-staging') {
            steps {
                script {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/s7t2w0j3'
                    sh 'docker logout public.ecr.aws/s7t2w0j3'
                }
            }
        }
        stage('docker-login-check-prod') {
            steps {
                script {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p5f6l6i3'
                    sh 'docker logout public.ecr.aws/p5f6l6i3'
                }
            }
        }
    }
}
